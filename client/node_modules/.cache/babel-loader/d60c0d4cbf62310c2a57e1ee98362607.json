{"ast":null,"code":"var _jsxFileName = \"C:\\\\Web Devlepment\\\\Web Devlepment\\\\Asssignment_10\\\\assignment_10\\\\client_side\\\\src\\\\Components\\\\Orders\\\\Orders.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { UserContext } from '../../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Orders = () => {\n  _s();\n\n  const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n  const [orders, setOrders] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:5055/orders?email=' + loggedInUser.email, {\n      method: 'GET',\n      headers: {\n        authorization: `Bearer ${sessionStorage.getItem('token')}`,\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(data => setOrders(data));\n  }, []);\n  return (\n    /*#__PURE__*/\n    // <div>\n    //     <h1> Your Recent Orders are here.. </h1>\n    //     <h3> {loggedInUser.name} {orders.email} You have: {orders.length} orders </h3>\n    // {\n    //      orders.map(order => <div> {order.email}  {order.name} from: {(new Date(order.pickedDate).toDateString('dd/MM/yyyy'))} </div> )\n    //  }\n    _jsxDEV(\"div\", {\n      class: \"card text-white bg-primary mb-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card-header\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\" \", loggedInUser.name, \" You have \", orders.length, \" Order/s \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 29\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card-body card-title \",\n        children: [orders.map(order => /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Product Name: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 56\n          }, this), \" \", order.name, new Date(order.pickedDate).toDateString('dd/MM/yyyy'), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 38\n        }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"card-text\",\n          children: \"Some quick example text to build on the card title and make up the bulk of the card's content.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 8\n    }, this)\n  );\n};\n\n_s(Orders, \"g4PsexeGb5PErHdqb0AeBy0ltII=\");\n\n_c = Orders;\nexport default Orders;\n\nvar _c;\n\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"sources":["C:/Web Devlepment/Web Devlepment/Asssignment_10/assignment_10/client_side/src/Components/Orders/Orders.js"],"names":["React","useContext","useEffect","useState","UserContext","Orders","loggedInUser","setLoggedInUser","orders","setOrders","fetch","email","method","headers","authorization","sessionStorage","getItem","then","res","json","data","name","length","map","order","Date","pickedDate","toDateString"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,WAAT,QAA4B,WAA5B;;;AAGA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,UAAU,CAACG,WAAD,CAAlD;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AAGAD,EAAAA,SAAS,CAAC,MAAK;AACXQ,IAAAA,KAAK,CAAC,wCAAuCJ,YAAY,CAACK,KAArD,EAA2D;AAC5DC,MAAAA,MAAM,EAAE,KADoD;AAE5DC,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,EAAG,UAASC,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAgC,EADpD;AAEL,wBAAgB;AAFX;AAFmD,KAA3D,CAAL,CAOCC,IAPD,CAOMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPb,EAQCF,IARD,CAQMG,IAAI,IAAIX,SAAS,CAACW,IAAD,CARvB;AASH,GAVQ,EAUP,EAVO,CAAT;AAYA;AAAA;AACI;AACA;AACA;AACI;AACA;AACA;AACL;AAAK,MAAA,KAAK,EAAC,iCAAX;AAAA,8BACL;AAAK,QAAA,KAAK,EAAC,aAAX;AAAA,qCAA0B;AAAA,0BAAMd,YAAY,CAACe,IAAnB,gBAAmCb,MAAM,CAACc,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,cADK,eAEL;AAAK,QAAA,KAAK,EAAC,uBAAX;AAAA,mBAEed,MAAM,CAACe,GAAP,CAAWC,KAAK,iBAAI;AAAA,oDAAkB;AAAA;AAAA;AAAA;AAAA,kBAAlB,OAAyBA,KAAK,CAACH,IAA/B,EACjB,IAAII,IAAJ,CAASD,KAAK,CAACE,UAAf,EAA2BC,YAA3B,CAAwC,YAAxC,CADiB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAApB,CAFf,eAKE;AAAG,UAAA,KAAK,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFK;AAAA;AAAA;AAAA;AAAA;AAAA;AAPH;AAkBH,CAnCD;;GAAMtB,M;;KAAAA,M;AAqCN,eAAeA,MAAf","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { UserContext } from '../../App';\r\n\r\n\r\nconst Orders = () => {\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n    const [orders, setOrders] = useState([]);\r\n\r\n\r\n    useEffect(() =>{\r\n        fetch('http://localhost:5055/orders?email=' +loggedInUser.email,{\r\n            method: 'GET',\r\n            headers: { \r\n                authorization: `Bearer ${sessionStorage.getItem('token')}`,\r\n                'Content-Type': 'application/json'},\r\n\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => setOrders(data));\r\n    },[])\r\n\r\n    return (\r\n        // <div>\r\n        //     <h1> Your Recent Orders are here.. </h1>\r\n        //     <h3> {loggedInUser.name} {orders.email} You have: {orders.length} orders </h3>\r\n            // {\r\n            //      orders.map(order => <div> {order.email}  {order.name} from: {(new Date(order.pickedDate).toDateString('dd/MM/yyyy'))} </div> )\r\n            //  }\r\n       <div class=\"card text-white bg-primary mb-5\" >\r\n  <div class=\"card-header\"> <h3> {loggedInUser.name} You have {orders.length} Order/s </h3> </div>\r\n  <div class=\"card-body card-title \">\r\n            {\r\n                 orders.map(order => <h1>Product Name: <br/> {order.name} \r\n                  {(new Date(order.pickedDate).toDateString('dd/MM/yyyy'))} </h1> )\r\n             }\r\n    <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n  </div>\r\n</div>\r\n    );\r\n};\r\n\r\nexport default Orders;"]},"metadata":{},"sourceType":"module"}